name: Publish to NPM and Docker

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  publish-npm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: |
          sudo apt-get install git curl xz-utils python3-pkg-resources python3-virtualenv python3-oauth2client
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "PATH=$(pwd)/depot_tools:$PATH" >> $GITHUB_ENV
      
      - name: Build package
        run: |
          npm i -g @liriliri/lsla
          npm i
          npm run init:front_end
          npm run build
      
      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
  publish-docker:
    needs: publish-npm
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/chii
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            latest
      
      - name: Build and push mini Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./publishDockerFile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
